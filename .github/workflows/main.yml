name: pages-build-site
on: 
  push: 
    branches: 
      - main
permissions:
  contents: read   # 只读取仓库内容的权限
  pages: write         # 写入 GitHub Pages 的权限
  id-token: write     # 写入身份验证令牌的权限，用于工作流之间的通信
concurrency:
  group: pages     # 使用名为“pages”的并发组
  cancel-in-progress: false # 不取消正在进行的运行，允许生产部署完成

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    # 检出代码仓库
      - name: Checkout
        uses: actions/checkout@v3   # 使用 GitHub 官方的检出动作
        with:
          fetch-depth: 0 # 如果未启用 lastUpdated，则不需要
           # 获取完整的历史记录，用于生成正确的 lastUpdated 时间（如果需要）
           # 设置 pnpm 环境
      - name: Setup pnpm
        uses: pnpm/action-setup@v2  # 使用 pnpm 官方的动作来设置 pnpm
        with:
          version: 10.6.3 # 指定要安装的 pnpm 版本
          
          # 设置 Node.js 环境
      - name: Setup Node
        uses: actions/setup-node@v3  # 使用 GitHub 官方的 Node.js 设置动作
        with:
          node-version: 22.14.0   # 使用 Node.js 18 版本
          cache: pnpm       # 启用 pnpm 缓存以加速依赖安装
           # 配置 GitHub Pages 环境
      - name: Setup Pages
        uses: actions/configure-pages@v5  # 使用 GitHub 官方的动作来自动配置 Pages
      # 安装项目依赖
      - name: Install dependencies
        run: pnpm install       
        
      
      - name: Build with VitePress
        run: |
          pnpm run docs:build           
          touch .nojekyll          
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3   
        with:
          path: docs/.vitepress/dist 




  deploy:
    runs-on: ubuntu-latest 
    steps:
  


      - uses: pnpm/action-setup@v4 // 配置使用pnpm
        name: Install pnpm
        id: pnpm-install
        with:
          version: 10
          run_install: false
      
      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Build docs
        run: pnpm -F docs build

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.RAN_ACTIONS_TOKEN }} 
          exclude_assets: ''
          publish_dir: docs/.vitepress/dist 
