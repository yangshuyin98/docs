name: pages-build-site
on: 
  push: 
    branches: 
      - main
permissions:
  contents: read   # 只读取仓库内容的权限
  pages: write         # 写入 GitHub Pages 的权限
  id-token: write     # 写入身份验证令牌的权限，用于工作流之间的通信
concurrency:
  group: pages     # 使用名为“pages”的并发组
  cancel-in-progress: false # 不取消正在进行的运行，允许生产部署完成

jobs:
  build-and-deploy:
    # 服务器环境：最新版 Ubuntu
    runs-on: ubuntu-latest
    steps:
      # 拉取代码
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # 设置 Node.js 版本
      - name: Setup Node.js environment
        uses: actions/setup-node@v1
        with:
          node-version: "14.18.0"
          
      # 缓存 node_modules
      - name: Cache dependencies
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-   
        
      
      # 如果缓存没有命中，安装依赖
      - name: Install dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn --frozen-lockfile

      # 生成静态文件
      - name: Build
        run: npm run build      


      # 部署到 GitHub Pages
      - name: Deploy
        uses: crazy-max/ghaction-github-pages@v2
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        with:
          target-branch: gh-pages # 部署到 gh-pages 分支，因为 main 分支存放的一般是源码，而 gh-pages 分支则用来存放生成的静态文件
          build_dir: docs/.vuepress/dist # vuepress 生成的静态文件存放的地方
          fqdn: cleaner.love  # 自定义域名