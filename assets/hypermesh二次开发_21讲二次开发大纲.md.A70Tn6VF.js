import{_ as a,c as p,o as t,ag as s}from"./chunks/framework.oP1PDRBo.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"hypermesh二次开发/21讲二次开发大纲.md","filePath":"hypermesh二次开发/21讲二次开发大纲.md","lastUpdated":1742376365000}'),i={name:"hypermesh二次开发/21讲二次开发大纲.md"};function l(h,e,n,o,r,c){return t(),p("div",null,e[0]||(e[0]=[s('<h2 id="第二十一讲hypermesh二次开发大纲讲解" tabindex="-1">第二十一讲hypermesh二次开发大纲讲解 <a class="header-anchor" href="#第二十一讲hypermesh二次开发大纲讲解" aria-label="Permalink to &quot;第二十一讲hypermesh二次开发大纲讲解&quot;">​</a></h2><h2 id="hypermesh关键字" tabindex="-1">Hypermesh关键字 <a class="header-anchor" href="#hypermesh关键字" aria-label="Permalink to &quot;Hypermesh关键字&quot;">​</a></h2><h3 id="关键字tcl" tabindex="-1">关键字tcl <a class="header-anchor" href="#关键字tcl" aria-label="Permalink to &quot;关键字tcl&quot;">​</a></h3><ul><li>set</li><li>puts</li><li>expr</li><li>if else</li><li>while，for，foreach</li><li>list</li><li>string</li><li>tk_getOpenFile</li><li>tk_getSaveFile</li><li>tk_chooseDirector</li><li>tk_messageBox</li></ul><h3 id="hypermesh-api" tabindex="-1">hypermesh_API <a class="header-anchor" href="#hypermesh-api" aria-label="Permalink to &quot;hypermesh_API&quot;">​</a></h3><p>*creatrmark</p><p>*createmarkpanel</p><p>hm_info</p><p>hm_entityinfo</p><p>hm_getvalue</p><p>hm_getstring</p><p>hm_getfloat</p><p>hm_entitylist</p><h3 id="目的" tabindex="-1">目的 <a class="header-anchor" href="#目的" aria-label="Permalink to &quot;目的&quot;">​</a></h3><p>1.创建焊球的中心</p><p>2.单独把rbe2与reb3放置在一个comps并删除comps（焊接）</p><p>3.根据bom自动命名（编号_材料的名字_厚度）</p><p>4.自动生成属性并赋予属性</p><p>5.检查2D单元是否重复（检查2D单元重复）</p><p>6.单独把comp另存为一个文件</p><p>7.写一个自动识别重复名称的comps，并把文件移动到另外一个comp</p><p>8.批量给cmps添加前缀或者后缀</p><p>9.删除特定开头的名字的components</p><p>10.模态分析自动化</p><p>11.自动抽取中面并重新命名</p><p>12.自动创建刚性单元</p><p>提取操作的代码，对它进行修饰或加入循环语言、输入语言，形成交互性的代码</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>*creatrmark comp 1 “all”                 #选择所有的层</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>set a [hm_getmark comp 1]        //得到他们的节点ID ：1、2、3、4、5</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>hm_getvalue comp id=1 dataname=name    //得到id=1 的名字</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>tk_getOpenFile                                        //打开文件</span></span></code></pre></div>',31)]))}const _=a(i,[["render",l]]);export{m as __pageData,_ as default};
