import{_ as a,c as e,o as n,ag as p}from"./chunks/framework.oP1PDRBo.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"CAE/22讲set puts expr for循环.md","filePath":"CAE/22讲set puts expr for循环.md","lastUpdated":1744363690000}'),t={name:"CAE/22讲set puts expr for循环.md"};function i(l,s,o,c,d,r){return n(),e("div",null,s[0]||(s[0]=[p(`<h2 id="第二十二讲-set-puts-expr-for循环的讲解" tabindex="-1">第二十二讲 set puts expr for循环的讲解 <a class="header-anchor" href="#第二十二讲-set-puts-expr-for循环的讲解" aria-label="Permalink to &quot;第二十二讲 set puts expr for循环的讲解&quot;">​</a></h2><p>变量不需要在使用之前声明</p><h3 id="set命令" tabindex="-1">set命令 <a class="header-anchor" href="#set命令" aria-label="Permalink to &quot;set命令&quot;">​</a></h3><p>创建变量使用set命令</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>set a 1.2</span></span>
<span class="line"><span>set a {please enter your id}</span></span>
<span class="line"><span>set a “please enter your id”</span></span>
<span class="line"><span>set a 10</span></span>
<span class="line"><span>set a [expr $a +20]</span></span>
<span class="line"><span>set b [expr $a-1 ]</span></span></code></pre></div><p>删除变量使用unset命令--&gt;<strong>set a 10</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>unset a              //删除变量</span></span>
<span class="line"><span>puts $a               //输出a，can\`t read “a”: no such variable</span></span></code></pre></div><h3 id="puts命令" tabindex="-1">puts命令 <a class="header-anchor" href="#puts命令" aria-label="Permalink to &quot;puts命令&quot;">​</a></h3><p>输出一个字符使用puts命令</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>puts “please enter your id”</span></span>
<span class="line"><span>puts Hyperworks</span></span></code></pre></div><p>如果字符串多于一个单词，则字符串必须使用双引号（””）或者大括号（{}）包起来</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>puts{ajj jsid 23 5.0 56 00}</span></span></code></pre></div><h3 id="expr-表达式" tabindex="-1">expr 表达式 <a class="header-anchor" href="#expr-表达式" aria-label="Permalink to &quot;expr 表达式&quot;">​</a></h3><p>操作对象可以是：</p><p>数值（整数或浮点型）</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>expr 4+1</span></span></code></pre></div><p>以使用$的变量</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>expr $a-$b</span></span></code></pre></div><p>以双引号或大括号括起来的字符串</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>expr sin(10)              //正弦</span></span></code></pre></div><p>用括号括起来的TCL命令</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>expr abs(-155)</span></span>
<span class="line"><span>express 1=1</span></span>
<span class="line"><span>expr $a%$b                   //取整</span></span>
<span class="line"><span>expr $a**$b                 //次方，指数</span></span></code></pre></div><h3 id="if-else" tabindex="-1">if else <a class="header-anchor" href="#if-else" aria-label="Permalink to &quot;if else&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>set x 35</span></span>
<span class="line"><span>If{$x==35}{</span></span>
<span class="line"><span>	puts “Handling is good.”}</span></span>
<span class="line"><span>	elseif{$x==20}{ puts “Ride is good.”}</span></span>
<span class="line"><span>	else{ puts “I am not sure of the quality of ride or handling.”}</span></span></code></pre></div><h3 id="while" tabindex="-1">while <a class="header-anchor" href="#while" aria-label="Permalink to &quot;while&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>set i 0</span></span>
<span class="line"><span>while {$i&lt;5} {</span></span>
<span class="line"><span>    put “In the while loop,and I ==$i”</span></span>
<span class="line"><span>    incr i 1}</span></span></code></pre></div><h3 id="讲解内容for" tabindex="-1">讲解内容for <a class="header-anchor" href="#讲解内容for" aria-label="Permalink to &quot;讲解内容for&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>for { set i 0} {$i&lt;5} { incr 1} {</span></span>
<span class="line"><span>	put “In the while loop,and I ==$i” }</span></span></code></pre></div><h3 id="foreach对数据进行循环" tabindex="-1">foreach对数据进行循环 <a class="header-anchor" href="#foreach对数据进行循环" aria-label="Permalink to &quot;foreach对数据进行循环&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>foreach vowel {a e I o u}{</span></span>
<span class="line"><span></span></span>
<span class="line"><span>	put “$vowel is a vowel”}</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>*createmarkpanel elems 1 “please select elems”</span><span>   //弹出elems选择对话框</span></span>
<span class="line"><span>set  elems_id    [hm_getmark elem 1]              //结点单元</span></span>
<span class="line"><span>set  l_elems     [llength $elems_id]              //结点单元的数量</span></span>
<span class="line"><span>for { set  i  0}  {  $i&lt;  $l_elems  } {  incr  1 } {</span></span>
<span class="line"><span>		set id { lindex  $elems_id  $i }    	 //列表索引</span></span>
<span class="line"><span>		put “this elems is $id”           		 // this elems is 192004</span></span>
<span class="line"><span>	}</span></span></code></pre></div>`,31)]))}const g=a(t,[["render",i]]);export{u as __pageData,g as default};
