import{_ as i,c as a,o as e,ag as s}from"./chunks/framework.oP1PDRBo.js";const g=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"notes/安装git.md","filePath":"notes/安装git.md","lastUpdated":1742376365000}'),o={name:"notes/安装git.md"};function l(n,t,p,r,d,h){return e(),a("div",null,t[0]||(t[0]=[s('<h2 id="一、关于git" tabindex="-1">一、关于Git <a class="header-anchor" href="#一、关于git" aria-label="Permalink to &quot;一、关于Git&quot;">​</a></h2><p>使用git从github下载项目到本地以及本地项目上传github</p><p>本文介绍了如何下载并安装Git，通过快速下载链接提高效率。详细步骤包括配置Git用户名和邮箱，创建SSH Key，并在GitHub上添加SSH Key。</p><p>此外，还讲解了如何从GitHub克隆项目以及将本地项目上传到GitHub，包括gitclone、gitinit、git、remote、add、origin等关键命令的使用。</p><h2 id="二、安装git" tabindex="-1">二、安装git <a class="header-anchor" href="#二、安装git" aria-label="Permalink to &quot;二、安装git&quot;">​</a></h2><p>要使用GitCode，需要先安装git工具。 git工具下载：<a href="https://git-scm.com/downloads" target="_blank" rel="noreferrer">https://git-scm.com/downloads</a> 安装完成后，在命令行输入git --version可以查看到git的版本。 验证Git安装是否成功的方法：</p><ol><li>验证Git安装是否成功的方法是通过在命令提示符或终端中输入以下命令：git --version</li><li>若显示版本号（git version 2.48.1.windows.1），说明Git安装成功。</li><li>如果没有返回版本信息或出现“命令未找到”的错误消息，则表示Git可能未正确安装或未添加到系统路径中。此时，可以参考安装指南重新检查安装步骤。</li></ol><p>安装完成后，右键菜单也会出现Git GUI、Git Bash相应的菜单。</p><h2 id="三、配置git用户名和邮箱的命令" tabindex="-1">三、配置Git用户名和邮箱的命令 <a class="header-anchor" href="#三、配置git用户名和邮箱的命令" aria-label="Permalink to &quot;三、配置Git用户名和邮箱的命令&quot;">​</a></h2><ol><li>全局配置（适用于所有项目）： 设置全局用户名：</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>git config --global user.name  &quot;yangshuyin98&quot;</span></span></code></pre></div><p>​ 设置全局邮箱：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>git config --global user.email &quot;yangshuyin@126.com&quot;</span></span></code></pre></div><p>这些命令会将配置信息保存到全局配置文件中，适用于所有项目。</p><ol start="2"><li>项目级配置（仅当前仓库生效）</li></ol><p>​ 设置局部用户名：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>git config user.name  &quot;yang_shu_yin&quot;</span></span></code></pre></div><p>​ 设置局部邮箱：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>git config user.email &quot;yangshuyin@126.com&quot;</span></span></code></pre></div><ol start="3"><li>配置完成后，可以使用git config --list命令查看所有git配置信息，以确认配置是否成功。</li></ol><h2 id="四、登录gitcode" tabindex="-1">四、登录GitCode <a class="header-anchor" href="#四、登录gitcode" aria-label="Permalink to &quot;四、登录GitCode&quot;">​</a></h2><p>GitCode地址：<a href="https://gitcode.net/" target="_blank" rel="noreferrer">https://gitcode.net/</a></p><p>如果你有CSDN账号，直接用CSDN账号登录即可。</p><p>我们先在 Github上注册账号并登录。 Github地址：<a href="https://github.com/new" target="_blank" rel="noreferrer">https://github.com/new</a></p><h2 id="五、生成ssh密钥" tabindex="-1">五、生成SSH密钥 <a class="header-anchor" href="#五、生成ssh密钥" aria-label="Permalink to &quot;五、生成SSH密钥&quot;">​</a></h2><p>由于我们的本地git仓库和 GitCode仓库之间的传输是通过SSH加密的，所以我们需要配置SSH密钥。 如果你打算将Git仓库托管在GitHub、GitLab等远程代码托管平台上，并希望通过SSH方式进行代码推送和拉取，那么还需要配置SSH密钥。</p><ol><li>首先，在命令提示符中输入命令生成SSH密钥对。按照提示完成三次回车，即可生成ssh key。</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>ssh-keygen -t rsa -C &quot;yangshuyin@126.com&quot;</span></span></code></pre></div><p>​ 可以看到，我们生成的公钥文件id_rsa.pub路径：C:\\User\\Adminstrator/.ssh/id_rsa.pub。 ​ 这个命令会生成一个私钥（默认存储在~/.ssh/id_rsa）和一个公钥（默认存储在~/.ssh/id_rsa.pub）。</p><ol start="2"><li>进入该目录用文本编辑器打开。即可看到SSH公钥，下文中将会用到这个SSH公钥。</li></ol><h2 id="六、配置ssh密钥的步骤" tabindex="-1">六、配置SSH密钥的步骤 <a class="header-anchor" href="#六、配置ssh密钥的步骤" aria-label="Permalink to &quot;六、配置SSH密钥的步骤&quot;">​</a></h2><ol><li><p>然后，登录到你的远程代码托管平台账户，找到SSH密钥设置部分，将生成的公钥添加到你的账户中。</p></li><li><p>在GitCode网站点击设置。</p></li><li><p>点击SSH密钥。</p></li><li><p>拷贝刚刚的SSH密钥到框中，输入公钥标题，点击添加密钥。</p></li><li><p>配置成功。</p></li><li><p>最后，为了验证SSH配置是否成功，可以在命令提示符中输入ssh -T <a href="mailto:git@github.com" target="_blank" rel="noreferrer">git@github.com</a>（以GitHub为例）命令进行测试。</p></li><li><p>如果看到欢迎信息，则说明SSH配置成功。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Hi yangshuyin98! You&#39;ve successfully authenticated, but GitHub does not provide shell access.</span></span></code></pre></div><p>​ ssh -T <a href="mailto:git@gitcode.com" target="_blank" rel="noreferrer">git@gitcode.com</a>（gitcode，（以前叫CODE.CHINA））</p></li></ol>',32)]))}const u=i(o,[["render",l]]);export{g as __pageData,u as default};
